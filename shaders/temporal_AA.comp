#version 450 core

#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_GOOGLE_include_directive : enable

#include "shaders_common.h"

layout (set=3, binding=1)        uniform texture2D   velocity;
layout (set=3, binding=2)        uniform texture2D   color_buffer;
layout (set=3, binding=3)        uniform texture2D   history;
layout (set=3, binding=4, rgba8) uniform image2D     taa_output;

layout (set=3, binding=0, std140) uniform PassUniform
{
    vec4 alpha;
} passUniform;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
    vec2 uv = (vec2(coords) + 0.5) / GetViewportSize();
	vec2 vel = SampleTexture(velocity, GetSamplerNearest(), uv).xy;
	vec2 uv_prev = uv - vel;

    vec3 accum = SampleTexture(history, GetSamplerNearest(), uv_prev).rgb;
    vec3 current = SampleTexture(color_buffer, GetSamplerNearest(), uv).rgb;
    
	float alpha = passUniform.alpha.x;
    vec3 result = mix(current, accum, alpha);

    imageStore(taa_output, coords, vec4(result, 1.0));
}