#version 450 core

#extension GL_GOOGLE_include_directive : enable

#include "shaders_common.h"

layout (set=3, binding=0, rgba8) uniform readonly 	image2D linearRT;
layout (set=3, binding=1, rgba8) uniform 			image2D encodedOutput;

layout (set=3, binding=2, std140) uniform PassUniform
{
	vec4 useEncoded_exposure;
} passUniform;

float GetUseEncoded() { return passUniform.useEncoded_exposure.x; }
float GetExposure() { return passUniform.useEncoded_exposure.y; }


vec3 ACESFilm(vec3 x)
{
    float a = 2.51f;
    float b = 0.03f;
    float c = 2.43f;
    float d = 0.59f;
    float e = 0.14f;
    return clamp((x*(a*x+b))/(x*(c*x+d)+e), 0.0, 1.0);
}

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
	
    vec3 linear = imageLoad(linearRT, coords).rgb;
    vec3 encoded = ACESFilm(linear * GetExposure());
    
    vec3 result = mix(linear, encoded, GetUseEncoded());
	
	imageStore(encodedOutput, coords, vec4(result, 1.0));
}